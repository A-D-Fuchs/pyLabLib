"""Call sphinx-apidoc while skipping the autogenerated and code-heavy modules

The modules list is generated automatically based on file names.
"""

import os
import glob
import subprocess

src=r"..\pylablib"

exclude_folders=["gui","thread","misc"]

def is_autogen(path):
    name=os.path.split(path)[1]
    return name.endswith("_defs.py") or (name.endswith("_lib.py") and name!="load_lib.py")
dev_files=glob.glob(os.path.join(src,"devices","**/*.py"))
autogen_files=[f for f in dev_files if is_autogen(f)]

skip_files=[f+"/**" for f in exclude_folders]+autogen_files
print("\n".join(["Skipping {}".format(f) for f in autogen_files]))
skip_files=[os.path.join(src,f) for f in skip_files]

os.environ["SPHINX_APIDOC_OPTIONS"]="members,inherited-members,undoc-members,show-inheritance"  # include inherited members into the docstring

subprocess.call(["sphinx-apidoc","-o",".apidoc",src]+skip_files)